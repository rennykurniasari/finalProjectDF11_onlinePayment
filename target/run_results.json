{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.2", "generated_at": "2023-12-12T15:34:35.091973Z", "invocation_id": "ba119167-c7fd-4c85-89f1-be2522e15cd1", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T15:33:09.973268Z", "completed_at": "2023-12-12T15:33:10.006981Z"}, {"name": "execute", "started_at": "2023-12-12T15:33:10.008906Z", "completed_at": "2023-12-12T15:33:11.682903Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.712609052658081, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "final-project-404104", "job_id": "1b14b0f3-bcef-42f5-8e14-9a840dc35618", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.online_payment.brz_transactions_merge", "compiled": true, "compiled_code": "SELECT * FROM `final-project-404104`.`online_payment`.`online_payment_1`\nUNION ALL\nSELECT * FROM `final-project-404104`.`online_payment`.`online_payment_2`\nUNION ALL\nSELECT * FROM `final-project-404104`.`online_payment`.`online_payment_3`\nUNION ALL\nSELECT * FROM `final-project-404104`.`online_payment`.`online_payment_4`\nUNION ALL\nSELECT * FROM `final-project-404104`.`online_payment`.`online_payment_5`\nUNION ALL\nSELECT * FROM `final-project-404104`.`online_payment`.`online_payment_6`\nUNION ALL\nSELECT * FROM `final-project-404104`.`online_payment`.`online_payment_7`\nORDER BY step", "relation_name": "`final-project-404104`.`online_payment_raw`.`brz_transactions_merge`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T15:33:11.690328Z", "completed_at": "2023-12-12T15:33:11.695439Z"}, {"name": "execute", "started_at": "2023-12-12T15:33:11.697057Z", "completed_at": "2023-12-12T15:33:13.226993Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.5406270027160645, "adapter_response": {"_message": "CREATE VIEW (0 processed)", "code": "CREATE VIEW", "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "final-project-404104", "job_id": "e3b63987-4fc8-4c66-a49d-9a37c7689ffd", "slot_ms": 0}, "message": "CREATE VIEW (0 processed)", "failures": null, "unique_id": "model.online_payment.brz_transactions", "compiled": true, "compiled_code": "WITH NumberedRows AS (\n\n    SELECT\n        *,\n        ROW_NUMBER() OVER (ORDER BY payment_datetime) AS row_num\n    FROM `final-project-404104`.`online_payment_raw`.`brz_transactions_merge`\n\n)\n\nSELECT\n    CONCAT('P', LPAD(CAST(row_num AS STRING), 10, '0'), '_', FORMAT_TIMESTAMP('%Y%m%d%H%M%S', payment_datetime)) AS transactionID,\n    payment_datetime as transactionDatetime,\n    type,\n    ROUND(amount, 2) as amount,\n    nameOrig,\n    ROUND(oldbalanceOrg, 2) as oldBalanceOrig,\n    ROUND(newbalanceOrig, 2) as newBalanceOrig,\n    nameDest,\n    ROUND(oldbalanceDest, 2) as oldBalanceDest,\n    ROUND(newbalanceDest, 2) as newBalanceDest,\n    CAST(isFraud as BOOLEAN) as isFraud,\n    CAST(isFlaggedFraud as BOOLEAN) as isFlaggedFraud,\n    step\nFROM\n    NumberedRows\nORDER BY transactionID", "relation_name": "`final-project-404104`.`online_payment_raw`.`brz_transactions`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T15:33:13.236371Z", "completed_at": "2023-12-12T15:33:13.245083Z"}, {"name": "execute", "started_at": "2023-12-12T15:33:13.247015Z", "completed_at": "2023-12-12T15:33:40.638790Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 27.406460285186768, "adapter_response": {"_message": "CREATE TABLE (6.4m rows, 597.0 MiB processed)", "code": "CREATE TABLE", "rows_affected": 6362620, "bytes_processed": 625995730, "bytes_billed": 625999872, "location": "US", "project_id": "final-project-404104", "job_id": "1562671f-e0de-4188-bd66-4a676c9175ad", "slot_ms": 287174}, "message": "CREATE TABLE (6.4m rows, 597.0 MiB processed)", "failures": null, "unique_id": "model.online_payment.svr_imbalance_transactions", "compiled": true, "compiled_code": "WITH source AS (\n    SELECT * FROM `final-project-404104`.`online_payment_raw`.`brz_transactions`\n),\n\nimbalance_transactions AS (\n    SELECT\n        transactionID,\n        transactionDatetime,\n        type,\n        ROUND(amount, 2) as amount,\n        nameOrig,\n        ROUND(oldBalanceOrig, 2) as oldBalanceOrig,\n        ROUND(newbalanceOrig, 2) as newbalanceOrig,\n        nameDest,\n        ROUND(oldbalanceDest, 2) as oldbalanceDest,\n        ROUND(newbalanceDest, 2) as newbalanceDest,\n        CASE\n            WHEN type IN ('PAYMENT', 'TRANSFER', 'CASH_OUT', 'DEBIT') AND\n            \n    (ABS(oldBalanceOrig - amount - newBalanceOrig) <= 0.01 OR\n    ROUND(oldBalanceOrig - amount, 2) = ROUND(newBalanceOrig, 2)) AND\n    (ABS(oldBalanceDest + amount - newBalanceDest) <= 0.01 OR\n    ROUND(oldBalanceDest + amount, 2) = ROUND(newBalanceDest, 2))\n THEN True\n\n            WHEN type = 'CASH_IN' AND\n            \n    (ABS(oldBalanceOrig + amount - newBalanceOrig) <= 0.01 OR\n    ROUND(oldBalanceOrig + amount, 2) = ROUND(newBalanceOrig, 2)) AND\n    (ABS(oldBalanceDest - amount - newBalanceDest) <= 0.01 OR\n    ROUND(oldBalanceDest - amount, 2) = ROUND(newBalanceDest, 2))\n THEN True\n\n            ELSE False\n\n        END AS isValid,\n        isFraud,\n        isFlaggedFraud\n    FROM source\n)\n\nSELECT * FROM imbalance_transactions\nORDER BY transactionID", "relation_name": "`final-project-404104`.`online_payment_transformed`.`svr_imbalance_transactions`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T15:33:40.649592Z", "completed_at": "2023-12-12T15:33:40.658834Z"}, {"name": "execute", "started_at": "2023-12-12T15:33:40.660667Z", "completed_at": "2023-12-12T15:34:14.425201Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 33.77975797653198, "adapter_response": {"_message": "CREATE TABLE (6.4m rows, 688.0 MiB processed)", "code": "CREATE TABLE", "rows_affected": 6362620, "bytes_processed": 721435030, "bytes_billed": 722468864, "location": "US", "project_id": "final-project-404104", "job_id": "01489928-8ae9-41f0-89d8-dabe52c11513", "slot_ms": 299148}, "message": "CREATE TABLE (6.4m rows, 688.0 MiB processed)", "failures": null, "unique_id": "model.online_payment.svr_balancing_transactions", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT *\n  FROM `final-project-404104`.`online_payment_transformed`.`svr_imbalance_transactions`\n),\n\nbalancing_transaction AS (\n    SELECT *,\n        CASE\n            WHEN type IN ('PAYMENT', 'TRANSFER', 'CASH_OUT', 'DEBIT') AND\n            isValid = False THEN ROUND(oldBalanceOrig - amount, 2)\n\n            WHEN type = 'CASH_IN' AND\n            isValid = False THEN ROUND(oldBalanceOrig + amount, 2)\n\n            ELSE newBalanceOrig\n\n        END AS newBalanceOrigValid,\n\n        CASE\n            WHEN type IN ('PAYMENT', 'TRANSFER', 'CASH_OUT', 'DEBIT') AND\n            isValid = False THEN ROUND(oldBalanceDest + amount, 2)\n\n            WHEN type = 'CASH_IN' AND\n            isValid = False THEN ROUND(oldBalanceDest - amount, 2)\n\n            ELSE newBalanceDest\n\n        END AS newBalanceDestValid\n    FROM source\n),\n\nbalancing_validation AS (\n    SELECT\n        transactionID,\n        CASE\n            WHEN type IN ('PAYMENT', 'TRANSFER', 'CASH_OUT', 'DEBIT') AND\n            \n    (ABS(oldBalanceOrig - amount - newBalanceOrigValid) <= 0.01 OR\n    ROUND(oldBalanceOrig - amount, 2) = ROUND(newBalanceOrigValid, 2)) AND\n    (ABS(oldBalanceDest + amount - newBalanceDestValid) <= 0.01 OR\n    ROUND(oldBalanceDest + amount, 2) = ROUND(newBalanceDestValid, 2))\n THEN True\n\n            WHEN type = 'CASH_IN' AND\n            \n    (ABS(oldBalanceOrig + amount - newBalanceOrigValid) <= 0.01 OR\n    ROUND(oldBalanceOrig + amount, 2) = ROUND(newBalanceOrigValid, 2)) AND\n    (ABS(oldBalanceDest - amount - newBalanceDestValid) <= 0.01 OR\n    ROUND(oldBalanceDest - amount, 2) = ROUND(newBalanceDestValid, 2))\n THEN True\n\n            ELSE False\n\n        END AS isValidUpdate\n    FROM balancing_transaction\n)\n\nSELECT\n    bt.transactionID as transactionID,\n    bt.transactionDatetime,\n    bt.type,\n    bt.amount,\n    bt.nameOrig,\n    bt.oldBalanceOrig,\n    bt.newbalanceOrig,\n    bt.newBalanceOrigValid,\n    bt.nameDest,\n    bt.oldbalanceDest,\n    bt.newbalanceDest,\n    bt.newBalanceDestValid,\n    bt.isValid,\n    bv.isValidUpdate,\n    bt.isFraud,\n    bt.isFlaggedFraud\nFROM balancing_transaction AS bt\nLEFT JOIN balancing_validation AS bv ON bt.transactionID = bv.transactionID\nORDER BY transactionID", "relation_name": "`final-project-404104`.`online_payment_transformed`.`svr_balancing_transactions`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-12T15:34:14.434571Z", "completed_at": "2023-12-12T15:34:14.442497Z"}, {"name": "execute", "started_at": "2023-12-12T15:34:14.444620Z", "completed_at": "2023-12-12T15:34:35.080386Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 20.64985489845276, "adapter_response": {"_message": "CREATE TABLE (5.3m rows, 791.2 MiB processed)", "code": "CREATE TABLE", "rows_affected": 5326830, "bytes_processed": 829599570, "bytes_billed": 830472192, "location": "US", "project_id": "final-project-404104", "job_id": "207d9ef2-866f-462e-8ddc-eb237a80bb48", "slot_ms": 186662}, "message": "CREATE TABLE (5.3m rows, 791.2 MiB processed)", "failures": null, "unique_id": "model.online_payment.invalid_transactions", "compiled": true, "compiled_code": "WITH source AS (\n  SELECT * FROM `final-project-404104`.`online_payment_transformed`.`svr_balancing_transactions`\n)\n\nSELECT\n    transactionID,\n    transactionDatetime,\n    CASE\n        WHEN EXTRACT(HOUR FROM transactionDatetime) >= 21 OR EXTRACT(HOUR FROM transactionDatetime) < 5 THEN 'Night'\n        WHEN EXTRACT(HOUR FROM transactionDatetime) >= 5 AND EXTRACT(HOUR FROM transactionDatetime) < 12 THEN 'Morning'\n        WHEN EXTRACT(HOUR FROM transactionDatetime) >= 12 AND EXTRACT(HOUR FROM transactionDatetime) < 17 THEN 'Afternoon'\n        WHEN EXTRACT(HOUR FROM transactionDatetime) >= 17 AND EXTRACT(HOUR FROM transactionDatetime) < 21 THEN 'Evening'\n    END AS timePeriod,\n    FORMAT_DATE('%A', transactionDatetime) AS day,\n    CASE \n        WHEN EXTRACT(DAY FROM transactionDatetime) <= 7 THEN 'Week 1'\n        WHEN EXTRACT(DAY FROM transactionDatetime) <= 14 THEN 'Week 2'\n        WHEN EXTRACT(DAY FROM transactionDatetime) <= 21 THEN 'Week 3'\n        WHEN EXTRACT(DAY FROM transactionDatetime) <= 28 THEN 'Week 4'\n        ELSE 'Week 5'\n    END AS weekOfMonth,\n    type,\n    amount,\n    nameOrig,\n    oldBalanceOrig,\n    newbalanceOrig,\n    newBalanceOrigValid,\n    nameDest,\n    oldbalanceDest,\n    newbalanceDest,\n    newBalanceDestValid,\n    isValid,\n    isValidUpdate,\n    isFraud,\n    isFlaggedFraud\nFROM source\nWHERE isValid = False\nORDER BY transactionDatetime", "relation_name": "`final-project-404104`.`online_payment_marts`.`invalid_transactions`"}], "elapsed_time": 86.93266892433167, "args": {"macro_debugging": false, "show_resource_report": false, "use_colors": true, "warn_error_options": {"include": [], "exclude": []}, "cache_selected_only": false, "log_format_file": "debug", "favor_state": false, "log_level_file": "debug", "project_dir": "/Users/rennykurniasari/Desktop/DF11/final_project/dbt/online_payment", "strict_mode": false, "log_level": "info", "partial_parse_file_diff": true, "which": "run", "defer": false, "log_file_max_bytes": 10485760, "send_anonymous_usage_stats": true, "write_json": true, "version_check": true, "exclude": [], "introspect": true, "print": true, "select": ["+invalid_transactions"], "printer_width": 80, "partial_parse": true, "log_format": "default", "quiet": false, "static_parser": true, "enable_legacy_logger": false, "use_colors_file": true, "populate_cache": true, "indirect_selection": "eager", "profiles_dir": "/Users/rennykurniasari/.dbt", "vars": {}, "log_path": "/Users/rennykurniasari/Desktop/DF11/final_project/dbt/online_payment/logs", "invocation_command": "dbt run --select +invalid_transactions"}}